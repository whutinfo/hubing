# Generated by Django 2.1.5 on 2019-04-10 05:20

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Models', '0003_cabinetmsg_cabinetoperate_camera'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cameraharddisk',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('harddiskid', models.IntegerField(db_column='HardDiskID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=50, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=50, null=True)),
                ('port', models.IntegerField(blank=True, db_column='Port', null=True)),
            ],
            options={
                'db_table': 'CameraHardDisk',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carddoor',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('ip', models.CharField(db_column='IP', max_length=20, primary_key=True, serialize=False)),
                ('port', models.IntegerField(blank=True, db_column='Port', null=True)),
                ('warehouseid', models.IntegerField(db_column='WareHouseID')),
            ],
            options={
                'db_table': 'CardDoor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carddoorrecord',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('ftime', models.DateTimeField(blank=True, db_column='FTime', null=True)),
            ],
            options={
                'db_table': 'CardDoorRecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carddooruser',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('ip', models.CharField(db_column='IP', max_length=20)),
                ('userid', models.IntegerField(db_column='UserID')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=50, null=True)),
                ('cardnumber', models.CharField(blank=True, db_column='CardNumber', max_length=10, null=True)),
                ('rolelevel', models.CharField(blank=True, db_column='RoleLevel', max_length=1, null=True)),
                ('createdate', models.DateField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'CardDoorUser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cardreader',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('number', models.IntegerField(db_column='Number', primary_key=True, serialize=False)),
                ('cardreaderip', models.CharField(blank=True, db_column='CardReaderIP', max_length=50, null=True)),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseID', null=True)),
                ('cardreadertype', models.IntegerField(blank=True, db_column='CardReaderType', null=True)),
                ('communicationstate', models.IntegerField(blank=True, db_column='CommunicationState', null=True)),
                ('flag', models.BooleanField(db_column='Flag')),
            ],
            options={
                'db_table': 'CardReader',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Checkmaintain',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fdate', models.DateField(blank=True, db_column='FDate', null=True)),
                ('ftime', models.CharField(blank=True, db_column='FTime', max_length=20, null=True)),
                ('fcontent', models.CharField(blank=True, db_column='FContent', max_length=200, null=True)),
                ('fbug', models.CharField(blank=True, db_column='FBug', max_length=200, null=True)),
                ('fhandle', models.CharField(blank=True, db_column='FHandle', max_length=200, null=True)),
                ('fduty', models.CharField(blank=True, db_column='FDuty', max_length=200, null=True)),
                ('fremark', models.CharField(blank=True, db_column='FRemark', max_length=200, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'CheckMaintain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Databak',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fdate', models.DateField(blank=True, db_column='FDate', null=True)),
                ('ftime', models.CharField(blank=True, db_column='FTime', max_length=20, null=True)),
                ('fcontent', models.CharField(blank=True, db_column='FContent', max_length=200, null=True)),
                ('fway', models.CharField(blank=True, db_column='FWay', max_length=200, null=True)),
                ('fbakid', models.CharField(blank=True, db_column='FBakID', max_length=200, null=True)),
                ('fduty', models.CharField(blank=True, db_column='FDuty', max_length=200, null=True)),
                ('fremark', models.CharField(blank=True, db_column='FRemark', max_length=200, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'DataBak',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Daytahrecord',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fdate', models.DateField(blank=True, db_column='FDate', null=True)),
                ('ckh1', models.DecimalField(blank=True, db_column='CKH1', decimal_places=0, max_digits=3, null=True)),
                ('wdam1', models.DecimalField(blank=True, db_column='WdAM1', decimal_places=2, max_digits=5, null=True)),
                ('sdam1', models.DecimalField(blank=True, db_column='SdAM1', decimal_places=2, max_digits=5, null=True)),
                ('wdpm1', models.DecimalField(blank=True, db_column='WdPM1', decimal_places=2, max_digits=5, null=True)),
                ('sdpm1', models.DecimalField(blank=True, db_column='SdPM1', decimal_places=2, max_digits=5, null=True)),
                ('ckh2', models.DecimalField(blank=True, db_column='CKH2', decimal_places=0, max_digits=3, null=True)),
                ('wdam2', models.DecimalField(blank=True, db_column='WdAM2', decimal_places=2, max_digits=5, null=True)),
                ('sdam2', models.DecimalField(blank=True, db_column='SdAM2', decimal_places=2, max_digits=5, null=True)),
                ('wdpm2', models.DecimalField(blank=True, db_column='WdPM2', decimal_places=2, max_digits=5, null=True)),
                ('sdpm2', models.DecimalField(blank=True, db_column='SdPM2', decimal_places=2, max_digits=5, null=True)),
                ('ckh3', models.DecimalField(blank=True, db_column='CKH3', decimal_places=0, max_digits=3, null=True)),
                ('wdam3', models.DecimalField(blank=True, db_column='WdAM3', decimal_places=2, max_digits=5, null=True)),
                ('sdam3', models.DecimalField(blank=True, db_column='SdAM3', decimal_places=2, max_digits=5, null=True)),
                ('wdpm3', models.DecimalField(blank=True, db_column='WdPM3', decimal_places=2, max_digits=5, null=True)),
                ('sdpm3', models.DecimalField(blank=True, db_column='SdPM3', decimal_places=2, max_digits=5, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'DayTAHRecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Detailcate',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('cateid', models.IntegerField(db_column='CateID', primary_key=True, serialize=False)),
                ('detailid', models.IntegerField(db_column='DetailID')),
                ('detailname', models.CharField(blank=True, db_column='DetailName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DetailCate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Devoperatemsg',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyId', primary_key=True, serialize=False)),
                ('devtype', models.IntegerField(db_column='DevType')),
                ('devid', models.IntegerField(db_column='DevId')),
                ('operate', models.CharField(blank=True, db_column='Operate', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'DevOperateMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Door',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('doorid', models.IntegerField(db_column='DoorID', primary_key=True, serialize=False)),
                ('cardreadernumber', models.IntegerField(db_column='CardReaderNumber')),
            ],
            options={
                'db_table': 'Door',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doorkey',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('doorid', models.IntegerField(blank=True, db_column='DoorID', null=True)),
                ('cabinetid', models.IntegerField(blank=True, db_column='CabinetID', null=True)),
                ('keyid', models.IntegerField(blank=True, db_column='KeyID', null=True)),
            ],
            options={
                'db_table': 'DoorKey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doormsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doorid', models.IntegerField(blank=True, db_column='DoorId', null=True)),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('doorname', models.CharField(blank=True, db_column='DoorName', max_length=50, null=True)),
                ('warehousename', models.CharField(blank=True, db_column='WareHouseName', max_length=50, null=True)),
                ('broadstate', models.CharField(blank=True, db_column='BroadState', max_length=50, null=True)),
                ('watchstate', models.CharField(blank=True, db_column='WatchState', max_length=50, null=True)),
                ('warning', models.CharField(blank=True, db_column='Warning', max_length=500, null=True)),
            ],
            options={
                'db_table': 'DoorMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Efence',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('extip', models.CharField(db_column='ExtIP', max_length=50)),
                ('extchannel', models.SmallIntegerField(db_column='ExtChannel')),
                ('ewidth', models.IntegerField(db_column='EWidth')),
                ('eheight', models.IntegerField(db_column='EHeight')),
                ('etype', models.SmallIntegerField(db_column='EType')),
            ],
            options={
                'db_table': 'EFence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('extensionid', models.IntegerField(db_column='ExtensionID', primary_key=True, serialize=False)),
                ('extensionname', models.CharField(db_column='ExtensionName', max_length=100)),
                ('communicationip', models.CharField(blank=True, db_column='CommunicationIP', max_length=50, null=True)),
                ('temperaturenumber', models.IntegerField(blank=True, db_column='TemperatureNumber', null=True)),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseID', null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
                ('extensiontype', models.IntegerField(blank=True, db_column='ExtensionType', null=True)),
                ('inputsignal1', models.IntegerField(blank=True, db_column='InputSignal1', null=True)),
                ('inputsignal2', models.IntegerField(blank=True, db_column='InputSignal2', null=True)),
                ('inputsignal3', models.IntegerField(blank=True, db_column='InputSignal3', null=True)),
                ('inputsignal4', models.IntegerField(blank=True, db_column='InputSignal4', null=True)),
                ('inputsignal5', models.IntegerField(blank=True, db_column='InputSignal5', null=True)),
                ('inputsignal6', models.IntegerField(blank=True, db_column='InputSignal6', null=True)),
                ('inputsignal7', models.IntegerField(blank=True, db_column='InputSignal7', null=True)),
                ('inputsignal8', models.IntegerField(blank=True, db_column='InputSignal8', null=True)),
                ('inputsignalcount', models.IntegerField(blank=True, db_column='InputSignalCount', null=True)),
                ('outputsignalflag1', models.IntegerField(blank=True, db_column='OutputSignalFlag1', null=True)),
                ('outputsignalflag2', models.IntegerField(blank=True, db_column='OutputSignalFlag2', null=True)),
                ('outputsignalflag3', models.IntegerField(blank=True, db_column='OutputSignalFlag3', null=True)),
                ('outputsignalflag4', models.IntegerField(blank=True, db_column='OutputSignalFlag4', null=True)),
                ('outputsignal1', models.IntegerField(blank=True, db_column='OutputSignal1', null=True)),
                ('outputsignal2', models.IntegerField(blank=True, db_column='OutputSignal2', null=True)),
                ('outputsignal3', models.IntegerField(blank=True, db_column='OutputSignal3', null=True)),
                ('outputsignal4', models.IntegerField(blank=True, db_column='OutputSignal4', null=True)),
                ('communicationstate', models.IntegerField(blank=True, db_column='CommunicationState', null=True)),
                ('remarkflag', models.IntegerField(blank=True, db_column='RemarkFlag', null=True)),
            ],
            options={
                'db_table': 'Extension',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extensionmsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extensionid', models.IntegerField(blank=True, db_column='ExtensionId', null=True)),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('extensionname', models.CharField(blank=True, db_column='ExtensionName', max_length=50, null=True)),
                ('warehousename', models.CharField(blank=True, db_column='WareHouseName', max_length=50, null=True)),
                ('broadstate', models.CharField(blank=True, db_column='BroadState', max_length=50, null=True)),
                ('agvtemperature', models.CharField(blank=True, db_column='AgvTemperature', max_length=50, null=True)),
                ('agvhumidity', models.CharField(blank=True, db_column='AgvHumidity', max_length=50, null=True)),
                ('abshumidity', models.CharField(blank=True, db_column='AbsHumidity', max_length=50, null=True)),
                ('warning', models.CharField(blank=True, db_column='Warning', max_length=500, null=True)),
            ],
            options={
                'db_table': 'ExtensionMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facedoor',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('inip', models.CharField(blank=True, db_column='InIP', max_length=20, null=True)),
                ('inport', models.IntegerField(blank=True, db_column='InPort', null=True)),
                ('outip', models.CharField(blank=True, db_column='OutIP', max_length=20, null=True)),
                ('outport', models.IntegerField(blank=True, db_column='OutPort', null=True)),
                ('warehouseid', models.IntegerField(db_column='WareHouseID')),
            ],
            options={
                'db_table': 'FaceDoor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facedoormsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facedoorname', models.CharField(blank=True, db_column='FaceDoorName', max_length=50, null=True)),
                ('warehousename', models.CharField(blank=True, db_column='WareHouseName', max_length=50, null=True)),
                ('broadstate', models.CharField(blank=True, db_column='BroadState', max_length=50, null=True)),
            ],
            options={
                'db_table': 'FaceDoorMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facedooruser',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('createdate', models.DateField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'FaceDoorUser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Incomewarehouserecord',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseID', null=True)),
                ('doorid', models.IntegerField(blank=True, db_column='DoorID', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('keyphyid', models.CharField(blank=True, db_column='KeyPhyID', max_length=50, null=True)),
                ('indate', models.DateTimeField(blank=True, db_column='InDate', null=True)),
                ('outdate', models.DateTimeField(blank=True, db_column='OutDate', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
                ('fleader', models.CharField(blank=True, db_column='FLeader', max_length=50, null=True)),
                ('fcount', models.CharField(blank=True, db_column='FCount', max_length=4, null=True)),
                ('fworkcontent', models.CharField(blank=True, db_column='FWorkContent', max_length=200, null=True)),
                ('fremark', models.CharField(blank=True, db_column='FRemark', max_length=200, null=True)),
                ('isrelated', models.BooleanField(db_column='IsRelated')),
            ],
            options={
                'db_table': 'InComeWareHouseRecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightline',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('lineid', models.IntegerField(db_column='LineID', primary_key=True, serialize=False)),
                ('watercard', models.CharField(db_column='WaterCard', max_length=10)),
                ('watercardplayer', models.IntegerField(db_column='WaterCardPlayer')),
            ],
            options={
                'db_table': 'KeepNightLine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightlinemsg',
            fields=[
                ('lineid', models.IntegerField(auto_created=True, blank=True, db_column='LineId', null=True)),
                ('guid', models.CharField(db_column='GUID', max_length=100, primary_key=True, serialize=False)),
                ('linename', models.CharField(blank=True, db_column='LineName', max_length=50, null=True)),
                ('keepnightstate', models.CharField(blank=True, db_column='KeepNightState', max_length=500, null=True)),
            ],
            options={
                'db_table': 'KeepNightLineMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightlog',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('watercardid', models.CharField(blank=True, db_column='WaterCardID', max_length=50, null=True)),
                ('watercardplayer', models.CharField(blank=True, db_column='WaterCardPlayer', max_length=50, null=True)),
                ('lineid', models.IntegerField(blank=True, db_column='LineID', null=True)),
                ('siteid', models.IntegerField(blank=True, db_column='SiteID', null=True)),
                ('dothing', models.CharField(blank=True, db_column='DoThing', max_length=100, null=True)),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
            ],
            options={
                'db_table': 'KeepNightLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightschedule',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('cardno', models.CharField(db_column='CardNo', max_length=10)),
                ('number', models.SmallIntegerField(db_column='Number')),
                ('classname', models.CharField(db_column='ClassName', max_length=50)),
                ('starttime', models.TimeField(db_column='StartTime')),
                ('endtime', models.TimeField(db_column='EndTime')),
            ],
            options={
                'db_table': 'KeepNightSchedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightsite',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('keepnightsitenumber', models.IntegerField(db_column='KeepNightSiteNumber', primary_key=True, serialize=False)),
                ('cardreadernumber', models.IntegerField(db_column='CardReaderNumber')),
            ],
            options={
                'db_table': 'KeepNightSite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keepnightsitemsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lineid', models.IntegerField(blank=True, db_column='LineId', null=True)),
                ('siteid', models.IntegerField(blank=True, db_column='SiteId', null=True)),
                ('sitename', models.CharField(blank=True, db_column='SiteName', max_length=500, null=True)),
                ('keepnightstate', models.CharField(blank=True, db_column='KeepNightState', max_length=500, null=True)),
            ],
            options={
                'db_table': 'KeepNightSiteMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keys',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('keyid', models.IntegerField(db_column='KeyID', primary_key=True, serialize=False)),
                ('keyphynum', models.CharField(blank=True, db_column='KeyPhyNum', max_length=100, null=True)),
                ('locksiteid', models.IntegerField(blank=True, db_column='LockSiteID', null=True)),
                ('cabinetid', models.IntegerField(db_column='CabinetID')),
                ('keytype', models.IntegerField(blank=True, db_column='KeyType', null=True)),
            ],
            options={
                'db_table': 'Keys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keysoperate',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('cabinetid', models.IntegerField(db_column='CabinetID')),
                ('operateuser', models.CharField(blank=True, db_column='OperateUser', max_length=50, null=True)),
                ('operatekeys', models.CharField(blank=True, db_column='OperateKeys', max_length=100, null=True)),
                ('operatedate', models.DateTimeField(db_column='OperateDate')),
                ('operatetype', models.IntegerField(blank=True, db_column='OperateType', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'KeysOperate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyuserecord',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('cabinetid', models.IntegerField(blank=True, db_column='CabinetID', null=True)),
                ('keyid', models.IntegerField(blank=True, db_column='KeyID', null=True)),
                ('keyuser1', models.CharField(blank=True, db_column='KeyUser1', max_length=50, null=True)),
                ('keyuser2', models.CharField(blank=True, db_column='KeyUser2', max_length=50, null=True)),
                ('cabinetuser', models.CharField(blank=True, db_column='CabinetUser', max_length=50, null=True)),
                ('workcontent', models.CharField(blank=True, db_column='WorkContent', max_length=200, null=True)),
                ('dutyuser', models.CharField(blank=True, db_column='DutyUser', max_length=500, null=True)),
                ('taketime', models.DateTimeField(blank=True, db_column='TakeTime', null=True)),
                ('baketime', models.DateTimeField(blank=True, db_column='BakeTime', null=True)),
            ],
            options={
                'db_table': 'KeyUseRecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('guid', models.CharField(db_column='GUID', max_length=100)),
                ('logdate', models.DateTimeField(blank=True, db_column='LogDate', null=True)),
                ('logmemo', models.CharField(blank=True, db_column='LogMemo', max_length=500, null=True)),
            ],
            options={
                'db_table': 'Logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Onlineclient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientip', models.CharField(blank=True, db_column='ClientIP', max_length=20, null=True)),
                ('areaid', models.IntegerField(blank=True, db_column='AreaID', null=True)),
            ],
            options={
                'db_table': 'OnLineClient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Phumidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PHumidity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pointsite',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('guid', models.CharField(db_column='GUID', max_length=100, primary_key=True, serialize=False)),
                ('x', models.FloatField(blank=True, db_column='X', null=True)),
                ('y', models.FloatField(blank=True, db_column='Y', null=True)),
            ],
            options={
                'db_table': 'PointSite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysoperatelog',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=50, null=True)),
                ('dothing', models.CharField(blank=True, db_column='Dothing', max_length=50, null=True)),
                ('ftime', models.DateTimeField(db_column='FTime')),
            ],
            options={
                'db_table': 'SysOperateLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Systemconfig',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('configname', models.CharField(blank=True, db_column='ConfigName', max_length=100, null=True)),
                ('configvalue', models.CharField(blank=True, db_column='ConfigValue', max_length=100, null=True)),
            ],
            options={
                'db_table': 'SystemConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userrole',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True, unique=True)),
                ('roleid', models.CharField(blank=True, db_column='RoleID', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UserRole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=100, unique=True)),
                ('realname', models.CharField(db_column='RealName', max_length=50)),
                ('userpassword', models.CharField(db_column='UserPassword', max_length=200)),
                ('stopflag', models.IntegerField(db_column='StopFlag')),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usertocabinet',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('cabinetid', models.IntegerField(db_column='CabinetID', primary_key=True, serialize=False)),
                ('modelid', models.IntegerField(db_column='ModelID')),
                ('modelgroupid', models.CharField(db_column='ModelGroupID', max_length=50)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
            ],
            options={
                'db_table': 'UserToCabinet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usertokeys',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('cabinetid', models.IntegerField(db_column='CabinetID')),
                ('keyid', models.IntegerField(db_column='KeyID')),
            ],
            options={
                'db_table': 'UserToKeys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('onlyid', models.IntegerField(auto_created=True, db_column='OnlyID')),
                ('warehouseid', models.IntegerField(db_column='WareHouseID', primary_key=True, serialize=False)),
                ('warehousename', models.CharField(blank=True, db_column='WareHouseName', max_length=50, null=True)),
                ('areaid', models.IntegerField(blank=True, db_column='AreaID', null=True)),
            ],
            options={
                'db_table': 'WareHouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehousemsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseId', null=True)),
                ('warehousename', models.CharField(blank=True, db_column='WareHouseName', max_length=50, null=True)),
                ('watchstate', models.CharField(blank=True, db_column='WatchState', max_length=50, null=True)),
            ],
            options={
                'db_table': 'WareHouseMsg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehousetempandhum',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseID', null=True)),
                ('extensionid', models.IntegerField(blank=True, db_column='ExtensionID', null=True)),
                ('tempnum', models.FloatField(blank=True, db_column='TempNum', null=True)),
                ('humnum', models.FloatField(blank=True, db_column='HumNum', null=True)),
                ('abshumnum', models.FloatField(blank=True, db_column='AbsHumNum', null=True)),
                ('tandhdate', models.DateTimeField(blank=True, db_column='TandHDate', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'WareHouseTempAndHum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehousetempandhumdetail',
            fields=[
                ('onlyid', models.AutoField(db_column='OnlyID', primary_key=True, serialize=False)),
                ('extensionid', models.IntegerField(blank=True, db_column='ExtensionID', null=True)),
                ('warehouseid', models.IntegerField(blank=True, db_column='WareHouseID', null=True)),
                ('temperature1', models.FloatField(blank=True, db_column='Temperature1', null=True)),
                ('humidity1', models.FloatField(blank=True, db_column='Humidity1', null=True)),
                ('temperature2', models.FloatField(blank=True, db_column='Temperature2', null=True)),
                ('humidity2', models.FloatField(blank=True, db_column='Humidity2', null=True)),
                ('temperature3', models.FloatField(blank=True, db_column='Temperature3', null=True)),
                ('humidity3', models.FloatField(blank=True, db_column='Humidity3', null=True)),
                ('temperature4', models.FloatField(blank=True, db_column='Temperature4', null=True)),
                ('humidity4', models.FloatField(blank=True, db_column='Humidity4', null=True)),
                ('temperature5', models.FloatField(blank=True, db_column='Temperature5', null=True)),
                ('humidity5', models.FloatField(blank=True, db_column='Humidity5', null=True)),
                ('temperature6', models.FloatField(blank=True, db_column='Temperature6', null=True)),
                ('humidity6', models.FloatField(blank=True, db_column='Humidity6', null=True)),
                ('temperature7', models.FloatField(blank=True, db_column='Temperature7', null=True)),
                ('humidity7', models.FloatField(blank=True, db_column='Humidity7', null=True)),
                ('temperature8', models.FloatField(blank=True, db_column='Temperature8', null=True)),
                ('humidity8', models.FloatField(blank=True, db_column='Humidity8', null=True)),
                ('ftime', models.DateTimeField(blank=True, db_column='FTime', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'WareHouseTempAndHumDetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workstatus',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('fdate', models.DateField(blank=True, db_column='FDate', null=True)),
                ('fduty', models.CharField(blank=True, db_column='FDuty', max_length=20, null=True)),
                ('fduty2', models.CharField(blank=True, db_column='FDuty2', max_length=20, null=True)),
                ('fcadre', models.CharField(blank=True, db_column='FCadre', max_length=20, null=True)),
                ('fsystem', models.CharField(blank=True, db_column='FSystem', max_length=200, null=True)),
                ('frecord', models.CharField(blank=True, db_column='FRecord', max_length=20, null=True)),
                ('fbusiness', models.CharField(blank=True, db_column='FBusiness', max_length=500, null=True)),
                ('fvideo', models.CharField(blank=True, db_column='FVideo', max_length=500, null=True)),
                ('fspecial', models.CharField(blank=True, db_column='FSpecial', max_length=500, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'WorkStatus',
                'managed': False,
            },
        ),
    ]
